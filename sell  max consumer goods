--[[
    Script de Venda de Bens de Consumo (v8 - Simplificado, Evita Players)

    Objetivo: Vender "Consumer Goods" (com quantidades específicas por país) automaticamente
              para todas as nações listadas, EXCETO aquelas controladas por jogadores humanos.
              Usa o atributo "Country" no Player para detectar.

    AVISO: Riscos de banimento associados ao uso de scripts/automação.
]]

print("[SCRIPT V8] Configurando...")

--[[----------------------------------------------------------
    SETUP INICIAL
-------------------------------------------------------------]]
-- Serviços
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer

-- Objetos Principais e Remotes (com verificação)
local GameManager = Workspace:WaitForChild("GameManager", 20)
local ManageAllianceRemote = GameManager and GameManager:WaitForChild("ManageAlliance", 15)

if not ManageAllianceRemote then
    warn("[SCRIPT V8] ERRO CRÍTICO: Não foi possível encontrar GameManager ou ManageAllianceRemote. O script não pode continuar.")
    return
end
print("[SCRIPT V8] Setup concluído.")

--[[----------------------------------------------------------
    CONFIGURAÇÕES DA VENDA
-------------------------------------------------------------]]
local RESOURCE_TO_SELL = "Consumer Goods"
local PRICE_PER_UNIT = 1
local TRADE_ACTION = "Sell"
local TRADE_TYPE = "Trade"
local DELAY_ENTRE_VENDAS = 1 -- Delay base entre cada tentativa de venda

--[[----------------------------------------------------------
    FUNÇÃO AUXILIAR (Executa Ação)
-------------------------------------------------------------]]
local function executarAcao(remoteEvent, arguments, delayTime)
    if not remoteEvent then warn("RemoteEvent inválido.") return false end
    local success, err = pcall(function() remoteEvent:FireServer(unpack(arguments)) end)
    if not success then warn(string.format("Erro %s: %s", remoteEvent.Name, tostring(err))) end
    task.wait(delayTime or DELAY_ENTRE_VENDAS)
    return success
end

--[[----------------------------------------------------------
    DADOS DAS VENDAS (Nação e Quantidade Específica)
-------------------------------------------------------------]]
local vendasPotenciais = {
    { nation = "Afghanistan", quantity = 7.2 }, { nation = "Albania", quantity = 2.4 }, { nation = "Algeria", quantity = 10.7 },
    { nation = "Angola", quantity = 7.8 }, { nation = "Argentina", quantity = 15.4 }, { nation = "Australia", quantity = 9 },
    { nation = "Austria", quantity = 4.1 }, { nation = "Azerbaijan", quantity = 3.7 }, { nation = "Bangladesh", quantity = 13.4 },
    { nation = "Belarus", quantity = 3.4 }, { nation = "Belgium", quantity = 3 }, { nation = "Bolivia", quantity = 5.2 },
    { nation = "Brazil", quantity = 138 }, { nation = "Bulgaria", quantity = 3.3 }, { nation = "Burkina Faso", quantity = 3.3 },
    { nation = "Burma", quantity = 5.8 }, { nation = "Cambodia", quantity = 2 }, { nation = "Cameroon", quantity = 4.3 },
    { nation = "Canada", quantity = 11.3 }, { nation = "Chad", quantity = 2.1 }, { nation = "Chile", quantity = 9.7 },
    { nation = "China", quantity = 142.4 }, { nation = "Colombia", quantity = 18.6 }, { nation = "Cote d'Ivoire", quantity = 4.3 },
    { nation = "Cuba", quantity = 3.2 }, { nation = "Czech Republic", quantity = 2.5 },
    { nation = "Democratic Republic Of The Congo", quantity = 11 }, -- Nome longo, confirmar se está correto
    { nation = "Dominican Republic", quantity = 3.6 }, { nation = "Ecuador", quantity = 4.2 }, { nation = "Egypt", quantity = 23.3 },
    { nation = "El Salvador", quantity = 2.1 }, { nation = "Ethiopia", quantity = 4.8 }, { nation = "Finland", quantity = 2.7 },
    { nation = "France", quantity = 21.7 }, { nation = "Georgia", quantity = 2.4 }, { nation = "Germany", quantity = 26.1 },
    { nation = "Ghana", quantity = 5.6 }, { nation = "Greece", quantity = 4.5 }, { nation = "Guatemala", quantity = 2.5 },
    { nation = "Guinea", quantity = 4.9 }, { nation = "Haiti", quantity = 2.4 }, { nation = "Hong Kong", quantity = 5.3 },
    { nation = "Hungary", quantity = 3 }, { nation = "India", quantity = 190 }, { nation = "Indonesia", quantity = 23.9 },
    { nation = "Iran", quantity = 16.6 }, -- Juntei as quantidades de Iran (16.4 + ~0.2, arredondado para 16.6?) ou use a última (16.6)
    { nation = "Iraq", quantity = 10 }, { nation = "Ireland", quantity = 3.6 }, -- Script original tinha 10.1 e 10, usei 10
    { nation = "Israel", quantity = 3.9 }, { nation = "Italy", quantity = 18.1 }, { nation = "Jamaica", quantity = 2.3 },
    { nation = "Japan", quantity = 107.1 }, { nation = "Jordan", quantity = 3.3 }, { nation = "Kazakhstan", quantity = 10.1 },
    { nation = "Kenya", quantity = 4.1 }, { nation = "Kuwait", quantity = 3 }, { nation = "Kyrgyzstan", quantity = 4.7 },
    { nation = "Laos", quantity = 2.3 }, { nation = "Latvia", quantity = 2.1 }, { nation = "Lebanon", quantity = 2.3 }, -- Script original tinha 2.8 e 2.3, usei 2.3
    { nation = "Liberia", quantity = 2.5 }, { nation = "Libya", quantity = 4 }, { nation = "Lithuania", quantity = 2.4 },
    { nation = "Luxembourg", quantity = 2.2 }, { nation = "Madagascar", quantity = 4.5 }, { nation = "Malawi", quantity = 4.2 },
    { nation = "Malaysia", quantity = 6.7 }, { nation = "Mali", quantity = 2.8 }, { nation = "Mexico", quantity = 45 },
    { nation = "Mongolia", quantity = 2.1 }, { nation = "Montenegro", quantity = 2.4 }, { nation = "Morocco", quantity = 11 },
    { nation = "Mozambique", quantity = 6.6 }, { nation = "Namibia", quantity = 3 }, { nation = "Nepal", quantity = 4.5 },
    { nation = "Netherlands", quantity = 6.3 }, { nation = "New Zealand", quantity = 2.9 }, -- Corrigido "Zeleand"
    { nation = "Nicaragua", quantity = 2.3 }, { nation = "Niger", quantity = 6.2 }, { nation = "Nigeria", quantity = 16.5 },
    { nation = "North Korea", quantity = 4.8 }, { nation = "North Macedonia", quantity = 2.1 }, { nation = "Norway", quantity = 2 },
    { nation = "Oman", quantity = 3.1 }, { nation = "Pakistan", quantity = 18.4 }, { nation = "Palestine", quantity = 2.3 },
    { nation = "Panama", quantity = 2 }, { nation = "Papua New Guinea", quantity = 3.3 }, { nation = "Paraguay", quantity = 2.8 },
    { nation = "Peru", quantity = 14.2 }, { nation = "Philippines", quantity = 19 }, { nation = "Poland", quantity = 6.8 },
    { nation = "Portugal", quantity = 4.8 }, { nation = "Puerto Rico", quantity = 2.4 }, { nation = "Qatar", quantity = 2.6 },
    { nation = "Romania", quantity = 4.8 }, { nation = "Russia", quantity = 32 }, { nation = "Rwanda", quantity = 4.2 },
    { nation = "Saudi Arabia", quantity = 17.5 }, { nation = "Senegal", quantity = 5 }, { nation = "Serbia", quantity = 2.1 },
    { nation = "Sierra Leone", quantity = 2.4 }, { nation = "Singapore", quantity = 4.1 }, { nation = "Slovakia", quantity = 2.7 },
    { nation = "Slovenia", quantity = 2.4 }, { nation = "Solomon Islands", quantity = 2.3 }, { nation = "Somalia", quantity = 2.9 },
    { nation = "South Africa", quantity = 26.9 }, { nation = "South Korea", quantity = 15 }, { nation = "South Sudan", quantity = 2.4 },
    { nation = "Spain", quantity = 19 }, { nation = "Sri Lanka", quantity = 3.6 }, { nation = "Sudan", quantity = 6.5 },
    { nation = "Suriname", quantity = 2.3 }, { nation = "Sweden", quantity = 4.2 }, { nation = "Switzerland", quantity = 2.3 },
    { nation = "Syria", quantity = 5.6 }, { nation = "Taiwan", quantity = 12.9 }, { nation = "Tajikistan", quantity = 5.5 },
    { nation = "Tanzania", quantity = 4.6 }, { nation = "Thailand", quantity = 7.8 }, { nation = "Togo", quantity = 2.9 },
    { nation = "Tunisia", quantity = 5.4 }, { nation = "Turkey", quantity = 18.4 }, { nation = "Turkmenistan", quantity = 2.2 },
    { nation = "Uganda", quantity = 3.2 }, { nation = "Ukraine", quantity = 10.9 }, { nation = "United Arab Emirates", quantity = 4.3 },
    { nation = "United Kingdom", quantity = 24.1 }, { nation = "United States", quantity = 262.7 }, { nation = "Uruguay", quantity = 2.2 },
    { nation = "Uzbekistan", quantity = 7.7 }, { nation = "Venezuela", quantity = 13.9 }, { nation = "Vietnam", quantity = 10 },
    { nation = "Yemen", quantity = 4 }, { nation = "Zambia", quantity = 3.8 }, { nation = "Zimbabwe", quantity = 11 },
}


--[[--------------------------------------------------------
    LOOP PRINCIPAL DE VENDAS (COM VERIFICAÇÃO DE PLAYERS)
-----------------------------------------------------------]]
print(string.format("[SCRIPT V8] Iniciando ciclo de vendas de '%s', pulando nações controladas por players...", RESOURCE_TO_SELL))
local vendasFeitas = 0
local vendasPuladas = 0

for i, vendaInfo in ipairs(vendasPotenciais) do
    local targetNationName = vendaInfo.nation
    local isPlayerControlled = false

    -- Verifica se algum jogador no servidor controla esta nação
    local currentPlayers = Players:GetPlayers()
    for _, player in ipairs(currentPlayers) do
        if player ~= localPlayer then
            local playerNation = player:GetAttribute("Country") -- Usa o atributo "Country"
            if playerNation and playerNation == targetNationName then
                isPlayerControlled = true
                vendasPuladas = vendasPuladas + 1
                -- print(string.format("  -> Pulando %s (Controlado por: %s)", targetNationName, player.Name)) -- Log opcional
                break
            end
        end
    end

    -- Se NENHUM jogador controla a nação, tenta vender
    if not isPlayerControlled then
        -- print(string.format("  -> %s não controlada. Vendendo %.2f %s...", targetNationName, vendaInfo.quantity, RESOURCE_TO_SELL)) -- Log opcional

        -- Monta os argumentos usando o NOME BASE da nação e dados da tabela/constantes
        local args = {
            targetNationName,           -- Nome Base da Nação
            "ResourceTrade",            -- Tipo de Ação
            {                           -- Detalhes da Troca
                RESOURCE_TO_SELL,       -- Recurso
                TRADE_ACTION,           -- Ação
                vendaInfo.quantity,     -- Quantidade (Específica da tabela)
                PRICE_PER_UNIT,         -- Preço
                TRADE_TYPE              -- Tipo/Confirmação
            }
        }

        -- Executa a ação
        executarAcao(ManageAllianceRemote, args)
        vendasFeitas = vendasFeitas + 1
    end
end

print(string.format("[SCRIPT V8] Ciclo de vendas concluído. Vendas tentadas: %d. Vendas puladas (players): %d.", vendasFeitas, vendasPuladas))
-- Fim do Script
